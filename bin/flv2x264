#!/bin/bash
VERBOSITY="${VERBOSITY:-"-loglevel warning -hide_banner -stats"}"
LockAC=
LockVC=

usage() {
  cat <<EOF
flv2x264 v0.2 alpha1 (c) 3ED @ terms of GPL2

USAGE:
  flv2x264 [OPTIONS] -i file.flv -o file.mkv

OPTIONS:
  -V    Video codec: h264, mpeg4 (xvid), vp8, theora, copy
  -v    Video quality: 0-9 (bigger is better)
  -A    Audio codec: aac, mp3, vorbis, copy
  -a    Audio quality: 0-9 (bigger is better)
  -f    Overwrite video filters, default is hqdn3d
  -F    Overwrite audio filters, empty by default
  -L    Show list of all available filters
  -h    This screen

DEFAULTS FOR OUTPUT EXT:
  avi   Audio: mp3 [1];    video: xvid [1]
  mp4   Audio: aac [1];    Video: h264 [1]
  mkv   Audio: aac [1];    Video: h264 [1]
  webm  Audio: vorbis [1]; Video: vp8 [1]
  ogm   Audio: vorbis [1]; Video: theora [1]

[1] - "or copy" when input and output match
EOF
  exit 1
}

test -z "$1" || test "$1" = "--help" && usage

while getopts "i:o:a:A:v:V:f:F:hL" OPT; do 
  case "$OPT" in
    a)
      if [ -n "$OPTARG" ] && [ -z "${OPTARG//[0-9]/}" ] && [ "${#OPTARG}" = "1" ]; then
        AQ="$OPTARG"
      else
        echo "Argument for „-a”: 0-9" >&2
        exit 1
      fi
      ;;
    v)
      if [ -n "$OPTARG" ] && [ -z "${OPTARG//[0-9]/}" ] && [ "${#OPTARG}" = "1" ]; then
        VQ="$OPTARG"
      else
        echo "Argument for „-v”: 0-9" >&2
        exit 1
      fi
      ;;
    A) AC="$OPTARG"; LockAC=1;;
    V) VC="$OPTARG"; LockVC=1;;
    f) VF="$OPTARG";;
    F) AF="$OPTARG";;
    L) ffmpeg -filters help -loglevel warning -hide_banner -stats; exit 1;;
    i) 
      if [ -n "$OPTARG" ] && [ -f "$OPTARG" ]; then
        IFILE="$OPTARG"
      else
        echo "Input file not found..." >&2
        exit 1
      fi
      ;;
    o)
      if [ -n "$OPTARG" ]; then 
        OFILE="$OPTARG"
        OFMT="${OFILE##*.}"
        case "$OFMT" in
          avi|mkv|mp4) true;;
          *) echo "Unsupported output extension, try: avi, mp4 or mkv" >&2; exit 1;;
        esac
      else
        echo "Output file name is empty..."
        exit 1
      fi
      ;;
    h) usage
  esac
done

case "$OFMT" in
  avi) AC="${AC:-"mp3"}"; VC="${VC:-"mpeg4"}";;
  mp4|mkv) AC="${AC:-"aac"}"; VC="${VC:-"h264"}";;
  webm) AC="${AC:-"vorbis"}"; VC="${VC:-"vp8"}";;
  ogg|ogm) AC="${AC:-"vorbis"}"; VC="${VC:-"theora"}";;
  *) echo "This container is not implemented. Use ffmpeg directly insead..."; exit 1;;
esac

test -n "$VF" && VF=" -filter:v $VF"
test -n "$AF" && AF=" -filter:a $AF"

while IFS=, read -a csv; do
  test "${csv[0]}" = "stream" || continue
  test "${csv[2]}" = "video" && test -z "$LockVC" && test "${csv[1]}" = "$VC" && VC=
  test "${csv[2]}" = "audio" && test -z "$LockAC" && test "${csv[1]}" = "$AC" && AC=
done < <(ffprobe -v 0 -print_format csv -show_entries stream=codec_name,codec_type -- "$IFILE")

case "$VC" in
  h264) VC="-c:v libx264 -trellis 2 -maxrate $[180000*$[${VQ:-"3"}+1]] -bufsize $[520000/$[${VQ:-"3"}+1]]$VF ";;
  mpeg4) VC="-c:v mpeg4 -vtag xvid -qscale:v $[$[10-${VQ:-"7"}]*2] -bf 2$VF ";;
  vp8) VC="-c:v libvpx -quality good -maxrate $[180000*$[${VQ:-"3"}+1]] -bufsize $[520000/$[${VQ:-"3"}+1]]$VF ";;
  theora) VC="-c:v libtheora -q:v $[${VQ:-"3"}+1]$VF ";;
  *) VC=
esac
case "$AC" in
  mp3) test -n "$AQ" && AQ=$[9-AQ]; AC="-c:a libmp3lame -qscale:a ${AQ:-"4"}$AF ";;
  vorbis) AC="-c:a libvorbis -qscale:a $[${AQ:-"3.0"}+1]$AF ";;
  aac) AC="-c:a aac -qscale:a $[${AQ:-"3"}+1]$AF ";;
  *) AC=
esac

printf -- "Command:\n  %s\n" "ffmpeg -i \"$IFILE\" \"$OFILE\" -c copy $VC$AC$VERBOSITY"

ffmpeg -i "$IFILE" -c copy $VC$AC-f $OFMT "$OFILE" $VERBOSITY
